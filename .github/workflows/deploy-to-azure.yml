name: Build and Deploy InternetBulletin

env:
    API_PROJECT_PATH: InternetBulletin.API/InternetBulletin.API.csproj
    WEB_PROJECT_PATH: InternetBulletin.Web
    DATABASE_PROJECT_PATH: InternetBulletin.Database/InternetBulletin.Database.sqlproj
    FUNCTION_PROJECT_PATH: InternetBulletin.Functions/InternetBulletin.Functions.csproj

on:
    workflow_dispatch:
        inputs:
            deploy_api:
                description: "InternetBulletin.API"
                required: false
                default: false
                type: boolean

            deploy_web:
                description: "InternetBulletin.Web"
                required: false
                default: false
                type: boolean

            deploy_database:
                description: "InternetBulletin.Database"
                required: false
                default: false
                type: boolean

            deploy_function:
                description: "InternetBulletin.Functions"
                required: false
                default: false
                type: boolean

jobs:
    #region API

    build-api:
        name: Build InternetBulletin.API
        runs-on: ubuntu-latest
        if: ${{ inputs.deploy_api }}
        outputs:
            artifact-path: ${{ steps.set-artifact-path.outputs.path }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Install dependencies and Build solution
              run: |
                  dotnet restore ${{ env.API_PROJECT_PATH }}
                  dotnet build ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore

            - name: Publish the project
              run: |
                  dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-build --output ./publish-api

            - name: Set artifact path
              id: set-artifact-path
              run: echo "path=./publish-api" >> $GITHUB_OUTPUT

            - name: Upload API Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: api-artifact
                  path: ./publish-api

    deploy-api:
        name: Deploy InternetBulletin.API
        runs-on: ubuntu-latest
        needs: build-api
        environment: Production
        steps:
            - name: Download API Artifact
              uses: actions/download-artifact@v4
              with:
                  name: api-artifact
                  path: ./publish-api

            - name: Deploy to Azure App Service
              uses: Azure/webapps-deploy@v2
              with:
                  app-name: app-webapi-internet-bulletin
                  slot-name: production
                  publish-profile: ${{ secrets.AZURE_IBBS_API_PUBLISH_PROFILE }}
                  package: ./publish-api

    #endregion

    #region WEB

    build-and-deploy-web:
        name: Build and Deploy InternetBulletin.Web
        if: ${{ inputs.deploy_web }}
        runs-on: ubuntu-latest
        environment: Production

        steps:
            # Checkout the repository
            - name: Checkout code
              uses: actions/checkout@v3

            # Setup Node.js
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18.x"

            # Install dependencies and build React-vite project
            - name: Install dependencies and build web
              run: |
                  cd ${{ env.WEB_PROJECT_PATH }}
                  npm install
                  npm run build

            # Deploy the React-Vite project to Azure Web App
            - name: Deploy Web to Azure Static Web App
              uses: Azure/static-web-apps-deploy@v1
              with:
                  azure_static_web_apps_api_token: ${{ secrets.AZURE_IBBS_WEB_DEPLOYMENT_SECRET }}
                  action: "upload"
                  app_location: ${{ env.WEB_PROJECT_PATH }}
                  output_location: "dist"

    #endregion

    #region Database

    build-database:
        name: Build InternetBulletin.Database
        runs-on: windows-latest
        if: ${{ inputs.deploy_database }}
        outputs:
            artifact-path: ${{ steps.set-artifact-path.outputs.path }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Install dependencies and Build solution
              run: |
                  dotnet restore ${{ env.DATABASE_PROJECT_PATH }}
                  dotnet build ${{ env.DATABASE_PROJECT_PATH }} --configuration Release --no-restore

            - name: Publish the project
              run: |
                  dotnet publish ${{ env.DATABASE_PROJECT_PATH }} --configuration Release --output ./publish-db

            - name: Set artifact path
              id: set-artifact-path
              run: echo "path=./publish-db" >> $GITHUB_OUTPUT

            - name: Upload DB Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: db-artifact
                  path: ./publish-db

    deploy-database:
        name: Deploy InternetBulletin.Database
        runs-on: windows-latest
        needs: build-database
        environment: Production
        permissions:
            id-token: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Azure Login
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Download DB Artifact
              uses: actions/download-artifact@v4
              with:
                  name: db-artifact
                  path: ./publish-db

            - name: Deploy to Azure SQL Server
              uses: azure/sql-action@v2.3
              with:
                  connection-string: ${{ secrets.AZURE_DB_CONNECTION_STRING }}
                  path: "./publish-db/InternetBulletin.Database.dacpac"
                  action: "publish"
                  arguments: "/p:DropObjectsNotInSource=true"

    #endregion

    #region Azure Function

    build-function:
        name: Build InternetBulletin.Functions
        runs-on: ubuntu-latest
        if: ${{ inputs.deploy_function }}
        outputs:
            artifact-path: ${{ steps.set-artifact-path.outputs.path }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Install dependencies and Build solution
              run: |
                  dotnet restore ${{ env.FUNCTION_PROJECT_PATH }}
                  dotnet build ${{ env.FUNCTION_PROJECT_PATH }} --configuration Release --no-restore

            - name: Publish the project
              run: |
                  dotnet publish ${{ env.FUNCTION_PROJECT_PATH }} --configuration Release --no-build --output ./publish-function

            - name: Set artifact path
              id: set-artifact-path
              run: echo "path=./publish-function" >> $GITHUB_OUTPUT

            - name: Upload Function Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: function-artifact
                  path: ./publish-function

    deploy-function:
        name: Deploy InternetBulletin.Functions
        runs-on: ubuntu-latest
        needs: build-function
        environment: Production
        steps:
            - name: Download Function Artifact
              uses: actions/download-artifact@v4
              with:
                  name: function-artifact
                  path: ./publish-function

            - name: Run Azure Functions action
              uses: Azure/functions-action@v1
              with:
                  app-name: func-internet-bulletin
                  package: ./publish-function
                  sku: "flexconsumption"
                  publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    #endregion
